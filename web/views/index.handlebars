<main>
	<header class="">
		<div class="logo">
		  <div class="layer"></div>
		  <div class="layer"></div>
		  <div class="layer"></div>
		  <div class="layer"></div>
		  <div class="layer"></div>
		  <div class="layer"></div>
		  <div class="layer"></div>
		  <div class="layer"></div>
		  <div class="layer"></div>
		  <div class="layer"></div>
		  <div class="layer"></div>
		  <div class="layer"></div>
		  <div class="layer"></div>
		  <div class="layer"></div>
		  <div class="layer"></div>
		  <div class="layer"></div>
		  <div class="layer"></div>
		  <div class="layer"></div>
		  <div class="layer"></div>
		  <div class="layer"></div>
		</div>

		<nav>
			<!-- Go Multilang --> 

			<span class="mobile_nav">
				<i class="fa fa-bars fa-2x"></i>
			</span>
			<ul>
				<li> <a id="legal-link" onclick="javascript:getPositionForLegal()"> Legal & Juridique </a> </li>
				<li> <a href="/add_point" id="add-point-link"> Add Point </a> </li>
				<li> <a href="/about" id="about"> About </a> </li>
			</ul>	
		</nav>
	</header>
	
	<article id="map"> </article>

	<div id="arguments" class="row">
		<div class="col-sm-3">
			<div class="card">
				<div>
				<img class="card-img-top" alt="surprise" src="web/images/surprise.jpeg" />
				</div>
				<div class="card-body">
					<h4 class="card-title"> Surprise ! </h4>
					<p class="card-text"> Quelle surprise de découvrir une zone de dépôt ! Quel objet allez vous y trouver ? Quelle sera votre prochaîne inspiration ? </p>
				</div>
			</div>
		</div>

		<div class="col-sm-3">
			<div class="card">
				<img class="card-img-top" alt="encombrants" src="web/images/encombrants_2.jpeg" />
				<div class="card-body">
					<h4 class="card-title"> Recyclage Effectif </h4>
					<p class="card-text"> Vos anciens meubles et objets ont de la valeur. Plus que ce que vous ne pensez ! </p>
				</div>
			</div>
		</div>

		<div class="col-sm-3">
			<div class="card">
				<div>
				<img class="card-img-top" alt="Résurection" src="web/images/restauration_0.png" />
				</div>
				<div class="card-body">
					<h4 class="card-title"> Seconde Vie ! </h4>
					<p class="card-text"> Que vous y croyez ou pas, offrez une seconde vie à vos objects ! Le saviez vous ? Les Japonais réparent un objet brisé avec de l'or, en effet ils considèrent que si l'objet est produit en série, c'est sa félure qui le rend unique. Pour eux, seul l'or peut réveler cete unicité à sa juste valeur. </p>
				</div>
			</div>
		</div>

		<div class="col-sm-3">
			<div class="card">
				<div>
				<img class="card-img-top" alt="surprise" src="web/images/surprise.jpeg" />
				</div>
				<div class="card-body">
					<h4 class="card-title"> Surprise ! </h4>
					<p class="card-text"> Quelle surprise de découvrir une zone de dépôt ! Quel objet allez vous y trouver ? Quelle sera votre prochaîne inspiration ? </p>
				</div>
			</div>
		</div>
	</div>

	<article id="enc_list">
		Will display list of active encombrants ...
	</article>
	
	<footer class="">
	</footer>

	<!-- usual div for SPA / XHR -->
	<div id="helper_div" class="helper_div"> </div>

	<!-- usual div for messaging -->
	<div id="message"> </div>

	<!-- div for responsive nav -->
	<div class="responsive_nav">
		<div class="close_nav">
			<i class="fas fa-pull-right fa-times fa-2x"> </i>
		</div>
		<br />
		<br />
		<div class="title">
			Navigation :
		</div>
		<div class="content">
		</div>
	 </div>
</main>

<script>
	var VueApp
	var geocode
	var realPosition
	var legal_cities = []
	var currentPosition = {} // "{ lat: 10.00002, lng: 369874 }" // <% toJSON coords %>

	function getLocation(){
		if( navigator.geolocation ){
			navigator.geolocation.getCurrentPosition(showPosition, positionError, { enableHighAccuracy: true, timeout: 50000, maximumAge: 60000 } )
		} else {
			console.log( "Geolocation is not supported by your browser" )
		}
	}
	function positionError( error ){
		console.error( "POSITION: " )
		console.dir( error )
	}

	function showPosition( position ){
		currentPosition = { lat: position.coords.latitude, lng: position.coords.longitude }

		initMap()
	}

	function initMap() {
		var coords = { lat: Number( currentPosition.lat ), lng: Number( currentPosition.lng ) }
		var map = new google.maps.Map(document.getElementById('map'), {
		  zoom: 14,
		  center: coords,
		  mapTypeId: "terrain"
		});
		var marker = new google.maps.Marker({
		  position: currentPosition,
		  map: map
		});

		// getReverseGeoCode( coords, map )
      	}
	
	function getReverseGeoCode( coords, map ){
		geocoder = new google.maps.Geocoder();

  		console.dir( coords )

		geocoder.geocode({'location': coords }, function(results, status) {
			if (status === 'OK') {
				console.dir( results )  
				extractCitiesFromPostalCode( results )
			/*
				resultsMap.setCenter( results[0].geometry.location );
			    	var marker = new google.maps.Marker({
			      		map: resultsMap,
			      		position: results[0].geometry.location
			    	});
			   */
			  } else {
			    alert('Geocode was not successful for the following reason: ' + status);
			  }
		})
	}

	function extractCitiesFromPostalCode( results ){
		var localities = []

		results.forEach( function( elem, ind, arr){
		  
			readFullObject( elem )
		  
		} )

		function readFullObject( obj ){
			for( var p in obj ){
		  
				if( p === "types" ){
		      
		      			var postal_code = obj.types.includes( 'postal_code' )
		      			if( postal_code ){
			
						VueApp.cities = obj[ "postcode_localities" ]
						console.log( "1 : " + obj[ "postcode_localities" ] + " " + "2 : " + VueApp.cities )
			
		      			}
		    		}
		  	}	  
		}
	}


	// getMyPosition
	function getMyPosition( cb ) {
		navigator.geolocation.getCurrentPosition( getPosition, positionError, { enableHighAccuracy: true, timeout: 50000, maximumAge: 60000 } )
	}
	function getPosition( position ){
		realPosition = { lat: position.coords.latitude, lng: position.coords.longitude }
		console.log( "REAL POS : " + realPosition )
		getReverseGeoCode( realPosition )
	}
	

	// EVENTS
	function getPositionForLegal( ){
		// display small city chooser div ( allow to close it )
		// get partial template from server
		// get current coordinates 
		// get cities associate with coordinates
		// on submit ask for a google search and take the first result associated with city + encombrants
		createVue()
		displayDiv()
		getMyPosition( )
		getPartial( "GET", "/legal_get-cities", document.getElementById( "helper_div" ) )
	}


	// UX Helpers
	function displayDiv() {
		document.getElementById( "helper_div" ).style.display = "initial"
		
		/*
		var elem_exist = document.getElementById( "legal_get-cities" ) 
		elem_exist ? document.querySelector( "body" ).removeChild( elem_exist ) : undefined

		var div = document.createElement( "div" )
		div.id = "legal_get-cities"
		div.style.position = "fixed"
		div.style.backgroundColor = "white"
		div.style.padding = "15px"
		div.style.width = "50%"
		div.style.height = "100px"
		div.style.top = "100px"
		div.style.right = "100px"

		// create close icon
		var close = document.createElement( "span" )
		close.style.textAlign = "right"
		var close_img = new Image()

		close_img.onload = function( ){
			console.log( "8797" )
		}

		close_img.src = "/web/images/icons/close-icon.png"

		// building stuff up
		close.appendChild( close_img )
		div.appendChild( close )
		document.querySelector( "body" ).appendChild( div )
		*/
	}

	// XHR Helper
	function getPartial( method, url, container ){
		var xhr = new XMLHttpRequest()	

		xhr.onreadystatechange = function ( event ){
			if( this.readyState === 4 ){
				if( this.status === 200 ){
					console.log( "AJAX OK : " + method + " " + url )
					container.innerHTML = this.responseText

					createVue()
				}
			}
		}

		xhr.open( method, url, true )
		xhr.send( null )
	}


	function createVue (){
		VueApp = new Vue({
			el: '#test_vue',
			data: {
				message: "Bienvenue dans les rouages de Vue JS",
				cities: [] 
			},
			methods: {
				enable_submit: function ( event ){
					var opt = document.querySelectorAll( "[name=city]" )
					var l = opt.length

					for( var n = 0; n < l; n++ ){
						if( opt[ n ].checked ) {
							document.getElementById( "submit_city" ).disabled = false
							break
						}
					}
				},
				submit_legal_city: function ( event ){
					// 1 - prevent default process of event
					event.preventDefault()

					// 2 - retrieve form data
					var city = document.querySelector('input[name="city"]:checked').value;
					console.log( "CITY : " + city ) 
					// 3 - send it via AJAX / XHR
					var xhr = new XMLHttpRequest()

					xhr.open( "POST", "/legal_city_choice", false )
					xhr.setRequestHeader("Content-type", "application/x-www-form-urlencoded");

					xhr.onreadystatechange = function( ){
						if( xhr.readyState === 4 && xhr.status === 200 ) {
							adaptDivForFullHTMLPage( xhr.responseText )
						}	
					}

					xhr.send( "city=" + city )
				}
			}
		})
	}

	function adaptDivForFullHTMLPage( link ){
		var iframe = document.createElement( "iframe" )
		iframe.src = link
		iframe.style.width = "100%"
		iframe.style.height = "100%"

		var el = document.getElementById( "helper_div" )

		while( el.firstChild ){
			el.removeChild( el.firstChild )
		}

		el.appendChild( iframe )
	} 

	// CARDS - OPTIMS
	(function( ){

		var cards = document.getElementsByClassName( "card" )
		var l = cards.length	
		var initialCardLength = cards[ 0 ].style.height

		// attach event
	
		console.log( "------------------" + cards.length ) 

		for( var i = 0; i < l; i++ ){
			cards[ i ].addEventListener( "mouseover", displayCards ) 
			cards[ i ].addEventListener( "mouseout", displayCardsBack ) 
		}

		function displayCards( event ){
			for( var i = 0; i < l; i++ ){
				cards[ i ].style.overflow = "initial"
				cards[ i ].style.height = "initial"
			}
			
			// find max length
			var heights = []
			for( var i = 0; i < l; i++ ){
				heights.push( cards[ i ].offsetHeight )
			}

			var maxHeight = heights.sort()
			maxHeight = maxHeight[ maxHeight.length - 1 ]

			for( var i = 0; i < l; i++ ){
				cards[ i ].style.height = maxHeight + "px"
			}
			
			console.log( "------------------" +  maxHeight ) 

		}
		function displayCardsBack( event ){
			for( var i = 0; i < l; i++ ){
				cards[ i ].style.overflow = "hidden"
				cards[ i ].style.height = initialCardLength
			}
		}

	} ) ()

	// RESPONSIVE NAV
	// click on hamburger / bars ( font awesome )
	var respNav = document.getElementsByClassName( "mobile_nav" )[ 0 ]
	var respNavDiv = document.getElementsByClassName( "responsive_nav" )[ 0 ]

	respNav.addEventListener( "click", function( event ){
		var nav = document.querySelector( "header ul" )

		respNavDiv.classList.toggle( "opened" )
		respNavDiv.querySelector( ".content" ).innerHTML = nav.innerHTML

		// on click link
		var linkCloseNav = document.querySelectorAll( ".responsive_nav a" )
		var k = linkCloseNav.length

		for( var m = 0; m < k; m++ ){
			linkCloseNav[ m ].addEventListener( "click", function( event ){
				event.preventDefault()
				respNavDiv.classList.toggle( "opened" )
			})
		}
		
	})
	// CLOSE NAV
	// on close button
	var closeNav = document.querySelector( ".close_nav" )
	closeNav.addEventListener( "click", function( event ){
		respNavDiv.classList.toggle( "opened" )
	
	})
	

</script>

<script async defer src="https://maps.googleapis.com/maps/api/js?key=AIzaSyAN2OomnGmeQLUrctCYJEXO64Y6KqohEZg&callback=getLocation"></script>	
